#!/bin/bash
set -euo pipefail

# ========== Color Setup ==========
green="\e[38;5;87m"
red="\e[38;5;196m"
neutral="\e[0m"
blue="\e[38;5;130m"
orange="\e[38;5;99m"
yellow="\e[38;5;226m"
bold_white="\e[1;37m"
reset="\e[0m"

# ========== Remove Previous Bot ==========
hapus_bot_lama() {
  echo -e "${orange}Menghapus bot lama...${neutral}"
  systemctl stop sellvpn.service 2>/dev/null || true
  systemctl disable sellvpn.service 2>/dev/null || true
  rm -f /etc/systemd/system/sellvpn.service
  rm -f /usr/bin/sellvpn /usr/bin/server_sellvpn /etc/cron.d/server_sellvpn
  rm -rf /root/BotVPN2

  if command -v pm2 &> /dev/null; then
    pm2 delete sellvpn &> /dev/null || true
    pm2 save &> /dev/null || true
  fi

  systemctl daemon-reload
  echo -e "${green}Bot lama berhasil dihapus.${neutral}"
}

# ========== Install Dependencies ==========
pasang_package() {
  echo -e "${blue}Install dependensi...${reset}"

  apt update -y
  apt install -y npm nodejs curl dos2unix jq tmux git \
    build-essential libcairo2-dev libpango1.0-dev libjpeg-dev \
    libgif-dev librsvg2-dev pkg-config libpixman-1-dev --no-install-recommends

  # ensure npm global bin is in PATH for non-interactive shells
  if ! command -v pm2 &> /dev/null; then
    npm install -g pm2 || {
      echo -e "${red}Gagal install pm2 via npm, coba ulangi manual${neutral}"
      exit 1
    }
  fi
}

# ========== Setup Bot ==========
setup_bot() {
  timedatectl set-timezone Asia/Jakarta || true

  if [ -d /root/BotVPN2/.git ]; then
    echo -e "${yellow}Update dari Git...${reset}"
    cd /root/BotVPN2 || { echo "cd gagal"; exit 1; }
    git pull --rebase || echo -e "${red}git pull gagal, periksa koneksi atau hak akses${neutral}"
  else
    echo -e "${green}Clone repo bot...${reset}"
    # clone repo ke folder target
    git clone https://github.com/mudziboy/mdzitr /root/BotVPN2 || { echo -e "${red}git clone gagal${neutral}"; exit 1; }
  fi

  # convert scripts jika ada (jika folder tidak ada, skip)
  if [ -d /root/BotVPN2/scripts ]; then
    echo -e "${yellow}Convert semua script ke format Unix (LF)...${reset}"
    find /root/BotVPN2/scripts -type f -name "*.sh" -exec dos2unix {} \; || true
  fi

  echo -e "${yellow}Install NPM packages (di prefix /root/BotVPN2)...${reset}"
  # jalankan npm install dan tunjukkan pesan jika gagal
  if ! npm install --prefix /root/BotVPN2 sqlite3 express crypto telegraf axios dotenv node-cron winston; then
    echo -e "${red}npm install gagal. Periksa error di /root/BotVPN2/npm-debug.log atau jalankan npm install manual.${neutral}"
    # jangan exit langsung — kita biarkan check lanjut agar pesan lebih jelas ke user
  fi

  # berikan executable kepada skrip yang jelas (tidak chmod 777 untuk keamanan)
  find /root/BotVPN2 -type f -iname "*.sh" -exec chmod +x {} \; || true
  [ -f /root/BotVPN2/app.js ] && chmod 750 /root/BotVPN2/app.js || true
}

# ========== Konfigurasi Firewalld/UFW ==========
set_firewall() {
  echo -e "${yellow}Mengaktifkan firewall...${reset}"
  # Pastikan allow SSH dulu
  ufw allow 22/tcp || true
  ufw allow 80/tcp || true
  ufw allow 443/tcp || true
  ufw allow 50123/tcp || true
  # auto-enable (sesuai permintaan)
  ufw --force enable || echo -e "${red}ufw enable gagal, periksa status${neutral}"
}

# ========== Konfigurasi Bot ==========
server_app() {
  clear
  echo -e "${orange}──────────────────────────────────────────────${neutral}"
  echo -e "   ${green}::: KONFIGURASI BOT VPN TELEGRAM :::${neutral}"
  echo -e "${orange}──────────────────────────────────────────────${neutral}"

  read -p "Masukkan Token Bot      : " token
  read -p "Masukkan Admin ID       : " adminid
  read -p "Masukkan ID Grup Telegram : " groupid
  read -p "Masukkan Nama Store     : " namastore
  read -p "Masukkan DATA QRIS      : " dataqris
  read -p "Masukkan MERCHANT ID    : " merchantid
  read -p "Masukkan API KEY        : " apikey

  mkdir -p /root/BotVPN2
  cat <<EOF > /root/BotVPN2/.vars.json
{
  "BOT_TOKEN": "$token",
  "USER_ID": "$adminid",
  "GROUP_ID": "$groupid",
  "NAMA_STORE": "$namastore",
  "PORT": "50123",
  "DATA_QRIS": "$dataqris",
  "MERCHANT_ID": "$merchantid",
  "API_KEY": "$apikey"
}
EOF

  # set permission aman: hanya root baca/tulis
  chmod 600 /root/BotVPN2/.vars.json || echo -e "${yellow}⚠️ Gagal set chmod untuk .vars.json, periksa hak akses${neutral}"

  # Validate JSON with jq
  if ! jq empty /root/BotVPN2/.vars.json 2>/dev/null; then
    echo -e "${red}❌ Gagal membuat file .vars.json. Cek input atau format.${neutral}"
    exit 1
  fi

  cat >/etc/cron.d/server_sellvpn <<EOF
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
*/30 * * * * root curl -s -F chat_id="$adminid" -F document=@"/root/BotVPN2/sellvpn.db" "https://api.telegram.org/bot$token/sendDocument" >/dev/null 2>&1
EOF

  # 🚀 Start PM2 bot
  sleep 2

  # Ensure app.js exists before starting pm2
  if [ ! -f /root/BotVPN2/app.js ]; then
    echo -e "${red}ERROR: /root/BotVPN2/app.js tidak ditemukan. Pastikan repo berisi app.js dan jalankan lagi.${neutral}"
    exit 1
  fi

  # Ensure pm2 exists
  if ! command -v pm2 &> /dev/null; then
    echo -e "${yellow}pm2 tidak ditemukan, mencoba install...${neutral}"
    npm install -g pm2 || { echo -e "${red}Gagal install pm2${neutral}"; exit 1; }
  fi

  # Start with memory guard (restart jika >300M) untuk mencegah OOM/bengkak memori
  pm2 start /root/BotVPN2/app.js --name sellvpn --cwd /root/BotVPN2 --log /var/log/sellvpn.log --max-memory-restart 300M || {
    echo -e "${red}pm2 start gagal, periksa /var/log/sellvpn.log dan pm2 logs${neutral}"
  }

  # Setup pm2 startup service for systemd (automasi)
  # This will create service and enable pm2 to resurrect after reboot
  pm2 startup systemd -u root --hp /root >/dev/null 2>&1 || true
  pm2 save >/dev/null 2>&1 || true

  # If pm2 startup printed a command to run, capture and run it (best-effort)
  # Note: pm2 startup usually doesn't require additional manual command when run as root, but we attempt to be thorough.
  STARTUP_CMD=$(pm2 startup systemd -u root --hp /root | tail -n1 || echo "")
  if [[ "$STARTUP_CMD" =~ pm2 ]]; then
    # execute suggested startup command (if any)
    eval "$STARTUP_CMD" || true
  fi

  # 📩 Notifikasi awal ke Admin (best-effort)
  curl -s -X POST "https://api.telegram.org/bot$token/sendMessage" \
    -d chat_id="$adminid" \
    -d text="✅ Bot VPN berhasil diaktifkan!\nGunakan /start untuk mulai." >/dev/null 2>&1 || echo -e "${yellow}Peringatan: notifikasi Telegram gagal (cek token/chat id)${neutral}"

  echo -e "${green}Bot VPN telah aktif. Cek Telegram!${neutral}"
}

# ========== EXECUTOR ==========
if [[ ${1:-} == "sellvpn" ]]; then
  hapus_bot_lama
  pasang_package
  setup_bot
  set_firewall
  server_app
else
  echo -e "${red}Gunakan perintah: ${yellow}bash start2 sellvpn${neutral}"
  exit 1
fi